<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="C:/Development/Personal/github/php-ga.git/src/GoogleAnalytics" file="Config.php" realpath="C:/Development/Personal/github/php-ga.git/src/GoogleAnalytics/Config.php" size="8050" time="2015-02-17T16:51:23+00:00" unixtime="1424191883" sha1="e555141862453f0c696cb2b761381adc7efe374f" relative="GoogleAnalytics/Config.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * Generic Server-Side Google Analytics PHP Client</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * This library is free software; you can redistribute it and/or</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> * modify it under the terms of the GNU Lesser General Public</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> * License (LGPL) as published by the Free Software Foundation; either</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> * version 3 of the License, or (at your option) any later version.</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> * This library is distributed in the hope that it will be useful,</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * Lesser General Public License for more details.</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> * You should have received a copy of the GNU Lesser General Public</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * License along with this library; if not, write to the Free Software</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT"> * Google Analytics is a registered trademark of Google Inc.</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT"> * @link      http://code.google.com/p/php-ga</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT"> * @license   http://www.gnu.org/licenses/lgpl.html</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT"> * @author    Thomas Bachem &lt;tb@unitedprototype.com&gt;</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT"> * @copyright Copyright (c) 2010 United Prototype GmbH (http://unitedprototype.com)</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="28"/>
  <line no="29">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">UnitedPrototype</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">GoogleAnalytics</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="30"/>
  <line no="31">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT"> * Note: Doesn't necessarily have to be consistent across requests, as it doesn't</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT"> * alter the actual tracking result.</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT"> * @link http://code.google.com/p/gaforflash/source/browse/trunk/src/com/google/analytics/core/GIFRequest.as</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="37">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Config</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="38">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">	 * How strict should errors get handled? After all, we do just do some</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">	 * tracking stuff here, and errors shouldn't break an application's</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">	 * functionality in production.</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">	 * RECOMMENDATION: Exceptions during deveopment, warnings in production.</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT">	 * Assign any value of the self::ERROR_SEVERITY_* constants.</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">	 * @see Tracker::_raiseError()</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">	 * @var int</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="50">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errorSeverity</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ERROR_SEVERITY_EXCEPTIONS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT">	 * Ignore all errors completely.</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">	</token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ERROR_SEVERITY_SILENCE</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="56">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT">	 * Trigger PHP errors with a E_USER_WARNING error level.</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">	</token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ERROR_SEVERITY_WARNINGS</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="61">
    <token name="T_DOC_COMMENT">	 * Throw UnitedPrototype\GoogleAnalytics\Exception exceptions.</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="63">
    <token name="T_WHITESPACE">	</token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ERROR_SEVERITY_EXCEPTIONS</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="64">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="66">
    <token name="T_DOC_COMMENT">	 * Whether to just queue all requests on HttpRequest::fire() and actually send</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT">	 * them on PHP script shutdown after all other tasks are done.</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT">	 * This has two advantages:</token>
  </line>
  <line no="70">
    <token name="T_DOC_COMMENT">	 * 1) It effectively doesn't affect app performance</token>
  </line>
  <line no="71">
    <token name="T_DOC_COMMENT">	 * 2) It can e.g. handle custom variables that were set after scheduling a request</token>
  </line>
  <line no="72">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="73">
    <token name="T_DOC_COMMENT">	 * @see Internals\Request\HttpRequest::fire()</token>
  </line>
  <line no="74">
    <token name="T_DOC_COMMENT">	 * @var bool</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="76">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$sendOnShutdown</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="77">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="78">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="79">
    <token name="T_DOC_COMMENT">	 * Whether to make asynchronous requests to GA without waiting for any</token>
  </line>
  <line no="80">
    <token name="T_DOC_COMMENT">	 * response (speeds up doing requests).</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">	 * @see Internals\Request\HttpRequest::send()</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT">	 * @var bool</token>
  </line>
  <line no="84">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="85">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fireAndForget</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="86">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT">	 * Logging callback, registered via setLoggingCallback(). Will be fired</token>
  </line>
  <line no="89">
    <token name="T_DOC_COMMENT">	 * whenever a request gets sent out and receives the full HTTP request</token>
  </line>
  <line no="90">
    <token name="T_DOC_COMMENT">	 * as the first and the full HTTP response (or null if the "fireAndForget"</token>
  </line>
  <line no="91">
    <token name="T_DOC_COMMENT">	 * option or simulation mode are used) as the second argument.</token>
  </line>
  <line no="92">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="93">
    <token name="T_DOC_COMMENT">	 * @var \Closure</token>
  </line>
  <line no="94">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="95">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$loggingCallback</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="96">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="98">
    <token name="T_DOC_COMMENT">	 * Seconds (float allowed) to wait until timeout when connecting to the</token>
  </line>
  <line no="99">
    <token name="T_DOC_COMMENT">	 * Google analytics endpoint host</token>
  </line>
  <line no="100">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="101">
    <token name="T_DOC_COMMENT">	 * @see Internals\Request\HttpRequest::send()</token>
  </line>
  <line no="102">
    <token name="T_DOC_COMMENT">	 * @var float</token>
  </line>
  <line no="103">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$requestTimeout</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="105">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="106">
    <token name="T_WHITESPACE">	</token>
    <token name="T_COMMENT">// FIXME: Add SSL support, https://ssl.google-analytics.com</token>
  </line>
  <line no="107">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="108">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="109">
    <token name="T_DOC_COMMENT">	 * Google Analytics tracking request endpoint host. Can be set to null to</token>
  </line>
  <line no="110">
    <token name="T_DOC_COMMENT">	 * silently simulate (and log) requests without actually sending them.</token>
  </line>
  <line no="111">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="112">
    <token name="T_DOC_COMMENT">	 * @see Internals\Request\HttpRequest::send()</token>
  </line>
  <line no="113">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="114">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="115">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endPointHost</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'www.google-analytics.com'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="116">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="117">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="118">
    <token name="T_DOC_COMMENT">	 * Google Analytics tracking request endpoint path</token>
  </line>
  <line no="119">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="120">
    <token name="T_DOC_COMMENT">	 * @see Internals\Request\HttpRequest::send()</token>
  </line>
  <line no="121">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="122">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="123">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endPointPath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/__utm.gif'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="124">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="125">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="126">
    <token name="T_DOC_COMMENT">	 * Whether to anonymize IP addresses within Google Analytics by stripping</token>
  </line>
  <line no="127">
    <token name="T_DOC_COMMENT">	 * the last IP address block, will be mapped to "aip" parameter</token>
  </line>
  <line no="128">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="129">
    <token name="T_DOC_COMMENT">	 * @see Internals\ParameterHolder::$aip</token>
  </line>
  <line no="130">
    <token name="T_DOC_COMMENT">	 * @link http://code.google.com/apis/analytics/docs/gaJS/gaJSApi_gat.html#_gat._anonymizeIp</token>
  </line>
  <line no="131">
    <token name="T_DOC_COMMENT">	 * @var bool</token>
  </line>
  <line no="132">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="133">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$anonymizeIpAddresses</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="134">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="135">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="136">
    <token name="T_DOC_COMMENT">	 * Defines a new sample set size (0-100) for Site Speed data collection.</token>
  </line>
  <line no="137">
    <token name="T_DOC_COMMENT">	 * By default, a fixed 1% sampling of your site visitors make up the data pool from which</token>
  </line>
  <line no="138">
    <token name="T_DOC_COMMENT">	 * the Site Speed metrics are derived.</token>
  </line>
  <line no="139">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="140">
    <token name="T_DOC_COMMENT">	 * @see Page::$loadTime</token>
  </line>
  <line no="141">
    <token name="T_DOC_COMMENT">	 * @link http://code.google.com/apis/analytics/docs/gaJS/gaJSApiBasicConfiguration.html#_gat.GA_Tracker_._setSiteSpeedSampleRate</token>
  </line>
  <line no="142">
    <token name="T_DOC_COMMENT">	 * @var int</token>
  </line>
  <line no="143">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="144">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$sitespeedSampleRate</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="145">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="146">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="148">
    <token name="T_DOC_COMMENT">	 * @param array $properties</token>
  </line>
  <line no="149">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="150">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$properties</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="151">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$properties</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$property</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="152">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// PHP doesn't care about case in method names</token>
  </line>
  <line no="153">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$setterMethod</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'set'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$property</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="154">
    <token name="T_WHITESPACE">			</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">method_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$setterMethod</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="156">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_VARIABLE">$setterMethod</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="157">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="158">
    <token name="T_WHITESPACE">				</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Tracker</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">_raiseError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'There is no setting "'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$property</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'".'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="159">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="160">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="161">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="162">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="163">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="164">
    <token name="T_DOC_COMMENT">	 * @return int See self::ERROR_SEVERITY_* constants</token>
  </line>
  <line no="165">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="166">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getErrorSeverity</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="167">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">errorSeverity</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="168">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="169">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="170">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="171">
    <token name="T_DOC_COMMENT">	 * @param int $errorSeverity See self::ERROR_SEVERITY_* constants</token>
  </line>
  <line no="172">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="173">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setErrorSeverity</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errorSeverity</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="174">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">errorSeverity</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errorSeverity</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="175">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="176">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="177">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="178">
    <token name="T_DOC_COMMENT">	 * @return bool</token>
  </line>
  <line no="179">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="180">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getSendOnShutdown</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="181">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">sendOnShutdown</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="182">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="183">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="184">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="185">
    <token name="T_DOC_COMMENT">	 * @param bool $sendOnShutdown</token>
  </line>
  <line no="186">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="187">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setSendOnShutdown</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$sendOnShutdown</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="188">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">sendOnShutdown</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$sendOnShutdown</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="189">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="190">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="191">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="192">
    <token name="T_DOC_COMMENT">	 * @return bool</token>
  </line>
  <line no="193">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="194">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getFireAndForget</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="195">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">fireAndForget</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="196">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="197">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="198">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="199">
    <token name="T_DOC_COMMENT">	 * @param bool $fireAndForget</token>
  </line>
  <line no="200">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="201">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setFireAndForget</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fireAndForget</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="202">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">fireAndForget</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOL_CAST">(bool)</token>
    <token name="T_VARIABLE">$fireAndForget</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="203">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="204">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="205">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="206">
    <token name="T_DOC_COMMENT">	 * @return \Closure|null</token>
  </line>
  <line no="207">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="208">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getLoggingCallback</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="209">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">loggingCallback</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="210">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="211">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="212">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="213">
    <token name="T_DOC_COMMENT">	 * @param \Closure $callback</token>
  </line>
  <line no="214">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="215">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setLoggingCallback</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Closure</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$callback</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="216">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">loggingCallback</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$callback</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="217">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="218">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="219">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="220">
    <token name="T_DOC_COMMENT">	 * @return float</token>
  </line>
  <line no="221">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="222">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getRequestTimeout</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="223">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">requestTimeout</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="224">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="225">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="226">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="227">
    <token name="T_DOC_COMMENT">	 * @param float $requestTimeout</token>
  </line>
  <line no="228">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="229">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setRequestTimeout</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$requestTimeout</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="230">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">requestTimeout</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_CAST">(float)</token>
    <token name="T_VARIABLE">$requestTimeout</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="231">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="232">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="233">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="234">
    <token name="T_DOC_COMMENT">	 * @return string|null</token>
  </line>
  <line no="235">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="236">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getEndPointHost</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="237">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">endPointHost</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="238">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="239">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="240">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="241">
    <token name="T_DOC_COMMENT">	 * @param string|null $endPointHost</token>
  </line>
  <line no="242">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="243">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setEndPointHost</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$endPointHost</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="244">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">endPointHost</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endPointHost</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="245">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="246">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="247">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="248">
    <token name="T_DOC_COMMENT">	 * @return string</token>
  </line>
  <line no="249">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="250">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getEndPointPath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="251">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">endPointPath</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="252">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="253">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="254">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="255">
    <token name="T_DOC_COMMENT">	 * @param string $endPointPath</token>
  </line>
  <line no="256">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="257">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setEndPointPath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$endPointPath</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="258">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">endPointPath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endPointPath</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="259">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="260">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="261">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="262">
    <token name="T_DOC_COMMENT">	 * @return bool</token>
  </line>
  <line no="263">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="264">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getAnonymizeIpAddresses</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="265">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">anonymizeIpAddresses</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="266">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="267">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="268">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="269">
    <token name="T_DOC_COMMENT">	 * @param bool $anonymizeIpAddresses</token>
  </line>
  <line no="270">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="271">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setAnonymizeIpAddresses</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$anonymizeIpAddresses</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="272">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">anonymizeIpAddresses</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$anonymizeIpAddresses</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="273">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="274">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="275">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="276">
    <token name="T_DOC_COMMENT">	 * @return int</token>
  </line>
  <line no="277">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="278">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getSitespeedSampleRate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="279">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">sitespeedSampleRate</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="280">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="281">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="282">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="283">
    <token name="T_DOC_COMMENT">	 * @param int $sitespeedSampleRate</token>
  </line>
  <line no="284">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="285">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setSitespeedSampleRate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$sitespeedSampleRate</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="286">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$sitespeedSampleRate</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_EQUAL">!=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_CAST">(float)</token>
    <token name="T_VARIABLE">$sitespeedSampleRate</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$sitespeedSampleRate</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$sitespeedSampleRate</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">100</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="287">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Tracker</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">_raiseError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'For consistency with ga.js, sample rates must be specified as a number between 0 and 100.'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_METHOD_C">__METHOD__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="288">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="289">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="290">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">sitespeedSampleRate</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$sitespeedSampleRate</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="291">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="292"/>
  <line no="293">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="294"/>
  <line no="295">
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
<enrichments xmlns="http://xml.phpdox.net/src"><enrichment type="build"><date unix="1424206050" date="17-02-2015" time="20:47:30" iso="2015-02-17T20:47:30+00:00" rfc="Tue, 17 Feb 2015 20:47:30 +0000"/><phpdox xmlns="http://xml.phpdox.net/src" version="" info="phpDox  - Copyright (C) 2010 - 2015 by Arne Blankerts" generated="Generated using phpDox  - Copyright (C) 2010 - 2015 by Arne Blankerts" phar="no"><enricher type="build"/><enricher type="git"/></phpdox><php xmlns="http://xml.phpdox.net/src" version="5.6.5" os="WINNT"><extension name="Core"/><extension name="bcmath"/><extension name="calendar"/><extension name="ctype"/><extension name="date"/><extension name="ereg"/><extension name="filter"/><extension name="ftp"/><extension name="hash"/><extension name="iconv"/><extension name="json"/><extension name="mcrypt"/><extension name="SPL"/><extension name="odbc"/><extension name="pcre"/><extension name="Reflection"/><extension name="session"/><extension name="standard"/><extension name="mysqlnd"/><extension name="tokenizer"/><extension name="zip"/><extension name="zlib"/><extension name="libxml"/><extension name="dom"/><extension name="PDO"/><extension name="openssl"/><extension name="SimpleXML"/><extension name="wddx"/><extension name="xml"/><extension name="xmlreader"/><extension name="xmlwriter"/><extension name="fileinfo"/><extension name="mbstring"/><extension name="Phar"/><extension name="xsl"/><extension name="mhash"/></php></enrichment></enrichments></source>
